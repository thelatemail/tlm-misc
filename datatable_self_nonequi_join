## simple example data for doing a self-join
## to determine a sum of values in a date range around each row
## e.g. - a 7 day rolling sum into the future
dt <- data.table(
    date = as.POSIXct(c("2023-04-15 17:30:00", "2023-04-16 11:45:00", "2023-04-17 10:30:00",
             "2023-04-30 22:00:00", "2023-05-10 13:15:00", "2023-05-11 06:30:00"), tz="UTC"),
    value = 30
)

## create a variable for looking ahead 7 days to simplify the code
dt[, date7 := date + as.difftime(7, units="days")]

## self-join and re-assign the results inside the original dataset
dt[, total7 := dt[dt, on=.(date <= date, date7 >= date), sum(x.value), by=.EACHI]$V1]

## breakdown
dt[
    dt,                                 # self join

    on=.(date <= date, date7 >= date),  # where the x.date lower bound is less than
                                        # the i.date, and the upper-bound x.date7 is
                                        # greater than the i.date
                                        # i.e. the date in i dataset is between itself
                                        # and a date 7 days in the future

    by=.EACHI,                          # group by each *row* in i dataset
                                        # i.e - loop through each row in i dataset
                                        # as the grouping variable

    sum(x.value)                        # sum all the x.value's that each row
                                        # of the i dataset matches to
                                        # i.e. - in the +7 day range from each row

]$V1                                    # extract the sum grouped by each i row

dt[, total7 := ...                      # this is then encapsulated and assigned back
                                        # to dt again, as each row in the joined i
                                        # dataset represents one value for each row in dt

